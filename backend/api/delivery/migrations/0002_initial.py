# Generated by Django 5.2.5 on 2025-08-17 14:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('delivery', '0001_initial'),
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='rider',
            name='user',
            field=models.OneToOneField(help_text='Associated user account', on_delete=django.db.models.deletion.CASCADE, related_name='rider_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='riderassignment',
            name='order',
            field=models.ForeignKey(help_text='Order to be delivered', on_delete=django.db.models.deletion.CASCADE, related_name='rider_assignments', to='orders.order'),
        ),
        migrations.AddField(
            model_name='riderassignment',
            name='rider',
            field=models.ForeignKey(help_text='Assigned rider', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='delivery.rider'),
        ),
        migrations.AddField(
            model_name='riderlocation',
            name='rider',
            field=models.ForeignKey(help_text='Rider whose location is being tracked', on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='delivery.rider'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['user'], name='idx_rider_user'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['status'], name='idx_rider_status'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['is_online'], name='idx_rider_online'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['is_available'], name='idx_rider_available'),
        ),
        migrations.AddIndex(
            model_name='rider',
            index=models.Index(fields=['vehicle_type'], name='idx_rider_vehicle'),
        ),
        migrations.AddConstraint(
            model_name='rider',
            constraint=models.CheckConstraint(condition=models.Q(('current_latitude__isnull', True), models.Q(('current_latitude__gte', -90), ('current_latitude__lte', 90)), _connector='OR'), name='valid_rider_latitude'),
        ),
        migrations.AddConstraint(
            model_name='rider',
            constraint=models.CheckConstraint(condition=models.Q(('current_longitude__isnull', True), models.Q(('current_longitude__gte', -180), ('current_longitude__lte', 180)), _connector='OR'), name='valid_rider_longitude'),
        ),
        migrations.AddConstraint(
            model_name='rider',
            constraint=models.CheckConstraint(condition=models.Q(('rating__gte', 1.0), ('rating__lte', 5.0)), name='valid_rider_rating'),
        ),
        migrations.AddIndex(
            model_name='riderassignment',
            index=models.Index(fields=['rider'], name='idx_assignment_rider'),
        ),
        migrations.AddIndex(
            model_name='riderassignment',
            index=models.Index(fields=['order'], name='idx_assignment_order'),
        ),
        migrations.AddIndex(
            model_name='riderassignment',
            index=models.Index(fields=['status'], name='idx_assignment_status'),
        ),
        migrations.AddIndex(
            model_name='riderassignment',
            index=models.Index(fields=['assigned_at'], name='idx_assignment_assigned'),
        ),
        migrations.AddConstraint(
            model_name='riderassignment',
            constraint=models.CheckConstraint(condition=models.Q(('rider_fee__gte', 0)), name='valid_assignment_rider_fee'),
        ),
        migrations.AddConstraint(
            model_name='riderassignment',
            constraint=models.CheckConstraint(condition=models.Q(('service_fee__gte', 0)), name='valid_assignment_service_fee'),
        ),
        migrations.AddIndex(
            model_name='riderlocation',
            index=models.Index(fields=['rider'], name='idx_location_rider'),
        ),
        migrations.AddIndex(
            model_name='riderlocation',
            index=models.Index(fields=['timestamp'], name='idx_location_timestamp'),
        ),
        migrations.AddIndex(
            model_name='riderlocation',
            index=models.Index(fields=['latitude', 'longitude'], name='idx_location_coordinates'),
        ),
        migrations.AddConstraint(
            model_name='riderlocation',
            constraint=models.CheckConstraint(condition=models.Q(('latitude__gte', -90), ('latitude__lte', 90)), name='valid_location_latitude'),
        ),
        migrations.AddConstraint(
            model_name='riderlocation',
            constraint=models.CheckConstraint(condition=models.Q(('longitude__gte', -180), ('longitude__lte', 180)), name='valid_location_longitude'),
        ),
        migrations.AddConstraint(
            model_name='riderlocation',
            constraint=models.CheckConstraint(condition=models.Q(('speed_kmph__isnull', True), ('speed_kmph__gte', 0), _connector='OR'), name='valid_location_speed'),
        ),
        migrations.AddConstraint(
            model_name='riderlocation',
            constraint=models.CheckConstraint(condition=models.Q(('accuracy__isnull', True), ('accuracy__gte', 0), _connector='OR'), name='valid_location_accuracy'),
        ),
        migrations.AddConstraint(
            model_name='riderlocation',
            constraint=models.CheckConstraint(condition=models.Q(('battery_level__isnull', True), models.Q(('battery_level__gte', 0), ('battery_level__lte', 100)), _connector='OR'), name='valid_location_battery'),
        ),
    ]
