# Generated by Django 5.2.5 on 2025-08-17 14:17

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Rider's first name", max_length=100)),
                ('last_name', models.CharField(help_text="Rider's last name", max_length=100)),
                ('email', models.EmailField(help_text="Rider's email address", max_length=254)),
                ('phone_number', models.CharField(help_text='Contact phone number', max_length=20)),
                ('vehicle_type', models.CharField(choices=[('motorcycle', 'Motorcycle'), ('bicycle', 'Bicycle'), ('e_bike', 'E-Bike'), ('car', 'Car'), ('scooter', 'Scooter')], help_text='Type of delivery vehicle', max_length=50)),
                ('vehicle_brand', models.CharField(blank=True, help_text='Vehicle brand/model', max_length=100, null=True)),
                ('plate_number', models.CharField(blank=True, help_text='Vehicle plate number', max_length=20, null=True)),
                ('vehicle_color', models.CharField(blank=True, help_text='Vehicle color', max_length=50, null=True)),
                ('valid_id', models.URLField(help_text='Government ID file path', max_length=255)),
                ('driver_license', models.URLField(blank=True, help_text="Driver's license file path", max_length=255, null=True)),
                ('vehicle_registration', models.URLField(blank=True, help_text='Vehicle registration file path', max_length=255, null=True)),
                ('insurance_document', models.URLField(blank=True, help_text='Insurance document file path', max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='pending', help_text='Verification status', max_length=50)),
                ('date_status', models.DateTimeField(blank=True, help_text='Status change timestamp', null=True)),
                ('status_notes', models.TextField(blank=True, help_text='Notes about status change', null=True)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Current GPS latitude coordinate', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Current GPS longitude coordinate', max_digits=11, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('is_online', models.BooleanField(default=False, help_text='Online/available status')),
                ('is_available', models.BooleanField(default=True, help_text='Available for new assignments')),
                ('profile_picture', models.URLField(blank=True, help_text="Rider's profile photo", max_length=255, null=True)),
                ('bio', models.TextField(blank=True, help_text='Rider bio/description', null=True)),
                ('preferred_areas', models.JSONField(blank=True, help_text='Preferred delivery areas', null=True)),
                ('max_delivery_distance', models.DecimalField(decimal_places=2, default=20.0, help_text='Maximum delivery distance in kilometers', max_digits=5, validators=[django.core.validators.MinValueValidator(1)])),
                ('total_deliveries', models.PositiveIntegerField(default=0, help_text='Total deliveries completed')),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, help_text='Average customer rating', max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, help_text='Total earnings', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rider',
                'verbose_name_plural': 'Riders',
                'db_table': 'rider',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rider_fee', models.DecimalField(decimal_places=2, help_text='Amount paid to rider', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Platform service fee', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('assigned_at', models.DateTimeField(auto_now_add=True, help_text='Assignment timestamp')),
                ('accepted_at', models.DateTimeField(blank=True, help_text='When rider accepted assignment', null=True)),
                ('picked_up_at', models.DateTimeField(blank=True, help_text='Pickup timestamp', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Delivery completion timestamp', null=True)),
                ('proof_of_delivery', models.URLField(blank=True, help_text='Delivery proof image path', max_length=255, null=True)),
                ('estimated_delivery_at', models.DateTimeField(blank=True, help_text='Estimated delivery time', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('picked_up', 'Picked Up'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', help_text='Assignment status', max_length=50)),
                ('delivery_notes', models.TextField(blank=True, help_text='Delivery-related notes', null=True)),
                ('customer_feedback', models.TextField(blank=True, help_text='Customer feedback about delivery', null=True)),
                ('customer_rating', models.PositiveIntegerField(blank=True, help_text='Customer rating for delivery (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rider Assignment',
                'verbose_name_plural': 'Rider Assignments',
                'db_table': 'rider_assignment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='GPS latitude coordinate', max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=8, help_text='GPS longitude coordinate', max_digits=11, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('speed_kmph', models.DecimalField(blank=True, decimal_places=2, help_text='Current speed in km/h', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('direction', models.CharField(blank=True, help_text='Direction (N, S, E, W) or heading angle', max_length=20, null=True)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, help_text='GPS accuracy in meters', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, help_text='Altitude in meters', max_digits=8, null=True)),
                ('battery_level', models.PositiveIntegerField(blank=True, help_text='Device battery level (0-100)', null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Location timestamp')),
            ],
            options={
                'verbose_name': 'Rider Location',
                'verbose_name_plural': 'Rider Locations',
                'db_table': 'rider_location',
                'ordering': ['-timestamp'],
            },
        ),
    ]
