# Generated by Django 5.2.5 on 2025-08-20 13:08

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order number', max_length=50, unique=True)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('preparing', 'Preparing'), ('ready_for_pickup', 'Ready for Pickup'), ('picked_up', 'Picked Up'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Current order status', max_length=50)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Unpaid'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='unpaid', help_text='Payment status', max_length=50)),
                ('delivery_type', models.CharField(choices=[('standard', 'Standard Delivery'), ('express', 'Express Delivery'), ('scheduled', 'Scheduled Delivery')], default='standard', help_text='Type of delivery service', max_length=50)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, help_text='Subtotal before taxes and fees', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Delivery service fee', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total discount amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount after all calculations', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_delivery', models.DateTimeField(blank=True, help_text='Estimated delivery time', null=True)),
                ('actual_delivery', models.DateTimeField(blank=True, help_text='Actual delivery time', null=True)),
                ('delivery_notes', models.TextField(blank=True, help_text='Special delivery instructions', null=True)),
                ('preferred_delivery_time', models.CharField(blank=True, choices=[('morning', 'Morning (8AM-12PM)'), ('afternoon', 'Afternoon (12PM-5PM)'), ('evening', 'Evening (5PM-9PM)'), ('anytime', 'Anytime')], help_text='Preferred delivery time slot', max_length=50, null=True)),
                ('source', models.CharField(choices=[('web', 'Web Application'), ('mobile', 'Mobile Application'), ('phone', 'Phone Order'), ('walk_in', 'Walk-in Customer')], default='web', help_text='Order source', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Additional order notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity ordered', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this line', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('prescription_required', models.BooleanField(default=False, help_text='Whether prescription is required for this item')),
                ('prescription_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], help_text='Prescription verification status', max_length=50, null=True)),
                ('prescription_notes', models.TextField(blank=True, help_text='Notes about prescription verification', null=True)),
                ('notes', models.TextField(blank=True, help_text='Special instructions for this item', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Order Line',
                'verbose_name_plural': 'Order Lines',
                'db_table': 'order_line',
                'ordering': ['created_at'],
            },
        ),
    ]
