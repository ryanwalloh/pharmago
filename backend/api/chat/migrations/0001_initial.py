# Generated by Django 5.2.5 on 2025-08-17 14:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('rider', 'Rider'), ('pharmacy', 'Pharmacy Staff'), ('admin', 'Admin'), ('support', 'Support Staff')], help_text='Participant role in chat', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether participant is active')),
                ('is_muted', models.BooleanField(default=False, help_text='Whether participant is muted')),
                ('is_blocked', models.BooleanField(default=False, help_text='Whether participant is blocked')),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text='When participant joined')),
                ('left_at', models.DateTimeField(blank=True, help_text='When participant left', null=True)),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Last seen timestamp')),
                ('notification_preferences', models.JSONField(default=dict, help_text='Notification preferences')),
            ],
            options={
                'verbose_name': 'Chat Participant',
                'verbose_name_plural': 'Chat Participants',
                'db_table': 'chat_participant',
                'ordering': ['joined_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(help_text='Unique chat room identifier', max_length=100, unique=True)),
                ('title', models.CharField(blank=True, help_text='Chat room title', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Room description', null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('archived', 'Archived')], default='open', help_text='Chat room status', max_length=20)),
                ('is_public', models.BooleanField(default=False, help_text='Whether room is public')),
                ('max_participants', models.PositiveIntegerField(default=10, help_text='Maximum number of participants', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(50)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, help_text='When room was closed', null=True)),
                ('last_activity', models.DateTimeField(auto_now=True, help_text='Last activity timestamp')),
            ],
            options={
                'verbose_name': 'Chat Room',
                'verbose_name_plural': 'Chat Rooms',
                'db_table': 'chat_room',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('system', 'System Message'), ('order_update', 'Order Update'), ('delivery_update', 'Delivery Update')], default='text', help_text='Type of message', max_length=20)),
                ('content', models.TextField(help_text='Message content')),
                ('file_path', models.URLField(blank=True, help_text='File path for non-text messages', max_length=500, null=True)),
                ('file_name', models.CharField(blank=True, help_text='Original file name', max_length=255, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('file_type', models.CharField(blank=True, help_text='File MIME type', max_length=100, null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='sent', help_text='Message delivery status', max_length=20)),
                ('is_edited', models.BooleanField(default=False, help_text='Whether message was edited')),
                ('edited_at', models.DateTimeField(blank=True, help_text='When message was edited', null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether message was deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When message was deleted', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional message metadata', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Message timestamp')),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When message was delivered', null=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='When message was read', null=True)),
                ('reply_to', models.ForeignKey(blank=True, help_text='Message this is replying to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.chatmessage')),
            ],
            options={
                'verbose_name': 'Chat Message',
                'verbose_name_plural': 'Chat Messages',
                'db_table': 'chat_message',
                'ordering': ['timestamp'],
            },
        ),
    ]
